# Generated by Django 3.1.5 on 2021-01-20 22:07

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('path', models.TextField()),
                ('size', models.BigIntegerField()),
            ],
            options={
                'ordering': ['-path'],
            },
        ),
        migrations.CreateModel(
            name='Torrent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('info_hash', models.CharField(max_length=40)),
                ('discovered_on', models.DateTimeField(auto_now_add=True, help_text='Date on which this torrent was discovered')),
                ('occurences', models.PositiveIntegerField(default=1, help_text='Count of occurences of this particular torrent')),
                ('keywords', models.TextField(help_text='Keywords extracted from torrent name to help with search')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
            options={
                'ordering': ['-discovered_on'],
            },
        ),
        migrations.AddIndex(
            model_name='torrent',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='api_torrent_search__0247f1_gin'),
        ),
        migrations.AddConstraint(
            model_name='torrent',
            constraint=models.UniqueConstraint(fields=('info_hash', 'name'), name='unique-name-info_hash'),
        ),
        migrations.AddField(
            model_name='file',
            name='torrent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='api.torrent'),
        ),
    ]
