
stages:
  - build
  - analyse

.python:
  image: python:3.8-buster
  stage: analyse
  variables:
    PIPENV_VENV_IN_PROJECT: enabled
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  before_script:
    - pip install --no-cache-dir pipenv==2020.11.15
    - pipenv install --dev --deploy
    - export PATH="$CI_PROJECT_DIR/.venv/bin:$PATH"
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .venv/
      - .cache/pip
      - .pytype
      - .mypy_cache

cache-dependencies:
  extends: .python
  stage: build
  script:
    - echo "Dependencies cached"

.build-docker:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

docker-build-api-master:
  extends: .build-docker
  variables:
    CI_REGISTRY_IMAGE: registry.gitlab.com/guillaumedsde/dht-crawler/api
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" . -f docker/Dockerfile --target api
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

docker-build-api:
  extends: .build-docker
  variables:
    CI_REGISTRY_IMAGE: registry.gitlab.com/guillaumedsde/dht-crawler/api
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" . -f docker/Dockerfile --target api
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master

docker-build-listener-master:
  extends: .build-docker
  variables:
    CI_REGISTRY_IMAGE: registry.gitlab.com/guillaumedsde/dht-crawler/listener
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" . -f docker/Dockerfile --target listener
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

docker-build-listener:
  extends: .build-docker
  variables:
    CI_REGISTRY_IMAGE: registry.gitlab.com/guillaumedsde/dht-crawler/listener
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" . -f docker/Dockerfile --target listener
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master

black: 
  extends: .python
  script: 
    - make black-check

flake8: 
  extends: .python
  script: 
    - make flake8

bandit: 
  extends: .python
  script: 
    - make bandit

isort: 
  extends: .python
  script: 
    - make isort-check

safety: 
  extends: .python
  script: 
    - make safety

mypy: 
  extends: .python
  script: 
    - make mypy

# need to fix this
# pytype: 
#   extends: .python
#   script: 
#     - make pytype
